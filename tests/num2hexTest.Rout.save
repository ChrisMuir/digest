
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## tests for digest, taken from the examples in the manual page
>
> stopifnot(require(digest))
Loading required package: digest
>
> # zap small numbers to zero
> zapsmall <- 1:10
> border <- 2 ^ floor(log2(10 ^ -zapsmall))
> stopifnot(
+     identical(
+         sapply(
+             seq_along(zapsmall),
+             function(i) {
+                 digest:::num2hex(border[i] * -1:1, digits = 6, zapsmall = zapsmall[i])
+             }
+         ),
+         matrix(
+             "0",
+             ncol = length(zapsmall),
+             nrow = 3
+         )
+     )
+ )
>
> # handle 0 correct
> stopifnot(
+     identical(
+         digest:::num2hex(0),
+         "0"
+     )
+ )
>
> # digits are consistent
> x <- pi
> x.hex <- sapply(1:16, digest:::num2hex, x = x)
> x.hex <- x.hex[c(TRUE, diff(nchar(x.hex)) > 0)]
> exponent <-  unique(gsub("^[0-9a-f]* ", "", x.hex))
> stopifnot(
+     identical(
+         length(exponent),
+         1L
+     )
+ )
> mantissa <- gsub(" [0-9]*$", "", x.hex)
> do.call(
+     stopifnot,
+     lapply(
+         head(seq_along(mantissa), -1),
+         function(i){
+             all(
+                 grepl(
+                     paste0("^", mantissa[i], ".*"),
+                     tail(mantissa, -i)
+                 )
+             )
+         }
+     )
+ )
>
> #it keeps NA values
> x <- c(pi, NA, 0)
> stopifnot(
+     identical(
+         is.na(digest:::num2hex(x)),
+         is.na(x)
+     )
+ )
> x <- c(pi, NA, pi)
> stopifnot(
+     identical(
+         is.na(digest:::num2hex(x)),
+         is.na(x)
+     )
+ )
> x <- as.numeric(c(NA, NA, NA))
> stopifnot(
+     identical(
+         is.na(digest:::num2hex(x)),
+         is.na(x)
+     )
+ )
>
> # handles empty vectors
> stopifnot(
+     identical(
+         digest:::num2hex(numeric(0)),
+         character(0)
+     )
+ )
>
>
> proc.time()
   user  system elapsed
   0.14    0.06    0.18
